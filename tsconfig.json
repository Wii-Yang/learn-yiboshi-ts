{
  "$schema": "https://json.schemastore.org/tsconfig",
  // ↓编译器选项
  "compilerOptions": {
    /* ↓Type Checking */
    // ↓在表达式和声明上有隐含的 any类型时报错
    "noImplicitAny": false,
    // ↓当处理使用继承的类时，子类可能会与在基类中重命名时重载的函数“不同步”
    "noImplicitOverride": true,
    // ↓报告未使用的局部变量的错误
    "noUnusedLocals": true,
    // ↓报告函数中未使用参数的错误
    "noUnusedParameters": false,
    // ↓严格标志可以实现广泛的类型检查行为，从而为程序的正确性提供更强的保证
    "strict": true,
    // ↓允许将catch子句中变量的类型从any更改为unknown
    "useUnknownInCatchVariables": false,

    /* ↓Modules */
    // ↓基准目录
    "baseUrl": ".",
    // ↓设置程序的模块系统
    "module": "commonjs",
    // ↓指定模块解析策略
    "moduleResolution": "node",
    // ↓允许导入扩展名为“.json”的模块
    "resolveJsonModule": true,

    /* ↓Emit */
    // ↓生成相应的 .d.ts文件
    "declaration": true,
    // ↓为.d.ts文件生成源映射，这些文件映射回原始的.ts源文件
    "declarationMap": false,
    // ↓将代码与sourcemaps生成到一个文件中，要求同时设置了 --inlineSourceMap或 --sourceMap属性
    "inlineSources": false,
    // ↓当转换为 JavaScript 时，忽略所有 TypeScript 文件中的注释
    "removeComments": true,
    // ↓输出目录。如果被指定，.js （以及 .d.ts, .js.map 等）将会被生成到这个目录下。
    "outDir": "./lib",

    /* ↓JavaScript Support */

    /* ↓Editor Support */

    /* ↓Interop Constraints */
    // ↓ES 模块互操作性
    "esModuleInterop": true,
    // ↓TypeScript遵循其运行的文件系统的区分大小写规则
    "forceConsistentCasingInFileNames": true,
    // ↓将每个文件作为单独的模块（与“ts.transpileModule”类似）
    "isolatedModules": true,

    /* ↓Backwards Compatibility */

    /* ↓Language and Environment */
    // ↓启用实验性的ES装饰器
    "experimentalDecorators": true,
    // ↓指定ECMAScript目标版本
    "target": "ESNext",

    /* ↓Compiler Diagnostics */

    /* ↓Projects */
    // ↓选项会强制执行某些约束，使得构建工具可以快速确定一个工程是否已经建立
    "composite": false,

    /* ↓Output Formatting */
    // ↓是否将过时的控制台输出保持在监视模式，而不是每次发生更改时都清除屏幕
    "preserveWatchOutput": true,

    /* ↓Completeness */
    // ↓跳过声明文件的类型检查
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "types/**/*.d.ts",
    "types/**/*.ts",
  ],
  "exclude": ["node_modules", "dist"]
}
